#!/bin/bash
# damato 2014


PROGNAME=${0##*/}
PROGVERSION=0.1
declare VOLUME=100  # volume of speech 0-100
declare LOOP=0      # number of times to repeat end message, 0=forever
declare ALARM="Time is up" # alarm message
declare DEBUG=
declare LEFT # time until next warning

usage()
{
  cat << EO
minutes-left [-m] minutes [options]
EO

  cat <<EO | column -s\& -t

  -h, --help & show this output
  -m, --minutes & minutes to count down
  -v, --volume & audio volume (0-100)
  -r, --repeat & how many times to repeat final alarm (0=forever)
  -a, --alarm-message & text to be spoken at the end of the countdown
  -d, --debug & skip delays during countdown

EO
}

SHORTOPTS="hdm:v:r:a:"
LONGOPTS="help,minutes:,volume:,repeat:,alarm-message:,debug"

ARGS=$(getopt -s bash --options $SHORTOPTS --longoptions $LONGOPTS --name $PROGNAME -- "$@")

eval set -- "$ARGS"

while true; do
    case $1 in
        -h|--help)
            usage; exit 0;;
        -v|--volume)
            VOLUME=$2; shift;;
	-r|--repeat)
	    LOOP=$2; shift;;
	-a|--alarm-message)
	    ALARM="$2"; shift;;
	-d|--debug)
	    DEBUG="true";;
	-m|--minutes)
	    LEFT=$2; shift;;
        --)
            break;;
#            LEFT=$2; break;;
    esac
    shift
done

function dump_if_debug () {
[ $DEBUG ] && cat <<EOF | column -s\& -t

VOLUME & $VOLUME
LOOP & $LOOP
ALARM & $ALARM
MINUTES & $LEFT
DEBUG & $DEBUG
EOF
}

dump_if_debug

(( LEFT > 0 )) || { usage; exit 1; }

#(( $1 )) || { echo "usage: minutes-left MINUTES [ VOLUME [ LOOP [ SKIP-SLEEP ]]]"; exit; }

set -e
declare MSG
declare SLEEP



function repeat () { 
  gtts-cli -o /tmp/say.mp3 "${@:2}"
  mplayer -volume $VOLUME -loop $1 \
    -quiet -nolirc /tmp/say.mp3
    > /dev/null; # only show stderr from mplayer
}
function _repeat () { 
  espeak "${@:2}"
}

function say () { repeat 1 "$*"; }


while (( LEFT > 0 )); do

  MSG="$LEFT minute"
  (( LEFT > 1 )) && MSG="${MSG}s"
  MSG="${MSG} left until $ALARM"
  echo $MSG
  say "$MSG" > /dev/null
  SLEEP=$(( $LEFT ))
  LEFT=$(( 2 * LEFT / 3))
  echo "Next warning at $LEFT minutes left"
  SLEEP=$(( SLEEP - LEFT ))
  echo "Sleeping for $SLEEP minutes"
  sleep $(( SLEEP * 60 ))

done

while (( 1 )); do

  repeat $LOOP "$ALARM" > /dev/null

done 
